"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = require("../types");
function getInitialUploadStatus() {
    return {
        autoRetryCount: 3,
        blocksCompleted: 0,
        serviceCallback: {
            autoRetryCount: 5,
            autoRetryDelay: 1,
            failureCount: 0
        },
        workerErrorCount: 0,
        healthCheckRunning: false,
        averageSpeed: 0,
        chunkQueue: [],
        endTime: null,
        inflightChunks: [],
        startTime: null,
        state: types_1.FileUploadServiceState.New,
        transferQueueRate: [],
        workers: [],
    };
}
exports.getInitialUploadStatus = getInitialUploadStatus;
function getInitialUploadData(uploadData) {
    return {
        assetId: uploadData.assetId,
        token: uploadData.token,
        uploadDomain: uploadData.uploadDomain,
        logToConsole: uploadData.logToConsole,
        onCompleted: uploadData.onCompleted,
        onMessage: uploadData.onMessage,
        onProgressChanged: uploadData.onProgressChanged,
        onStateChanged: uploadData.onStateChanged,
        blobPartitions: 0,
        callbackUrl: '',
        correlationId: uploadData.assetId,
        correlationVector: '',
        chunkSize: 0,
        notifyParentWindow: false,
        singleThreadMaxUploadSize: 2,
        totalBlocks: 0,
        uploaders: 8,
        file: null
    };
}
exports.getInitialUploadData = getInitialUploadData;
//# sourceMappingURL=init-state.js.map