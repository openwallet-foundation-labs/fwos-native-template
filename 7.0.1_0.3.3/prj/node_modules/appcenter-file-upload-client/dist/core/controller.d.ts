import { CustomFile, FileUploadServiceState, IFileUploadClient, IFullUploadData, IUploadData, IUploadStatus, MessageLevel } from "../types";
export default class FileUploadController implements IFileUploadClient {
    totalBytesUploaded: number;
    chunkBytesUploaded: number[];
    uploadStatus: IUploadStatus;
    uploadData: IFullUploadData;
    progressUpdateRate: number;
    constructor(uploadData: IUploadData);
    init(uploadData: IUploadData): void;
    start(_file: string | File | CustomFile): Promise<void>;
    cancel(): void;
    upload(): void;
    enqueueChunks(chunks: number[]): void;
    healthCheck(): void;
    fatalError(errorMessage: string, data: any): void;
    log(information: string): void;
    message(text: string, level?: MessageLevel): void;
    setState(state: FileUploadServiceState): void;
    stopAllWorkers(): void;
    isUploadInProgress(): boolean;
    protected reportChunkProgress(): void;
    protected reportEventProgress(chunkNumber: number, bytesUploadedInChunk: number): void;
    protected finishUpload(): void;
    protected setMetadata(): void;
    private initializeUpload;
}
