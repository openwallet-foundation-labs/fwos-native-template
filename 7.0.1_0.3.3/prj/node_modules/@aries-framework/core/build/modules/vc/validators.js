"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsJsonLdContext = void 0;
const class_validator_1 = require("class-validator");
const constants_1 = require("./constants");
function IsJsonLdContext(validationOptions) {
    return (0, class_validator_1.ValidateBy)({
        name: 'IsJsonLdContext',
        validator: {
            validate: (value) => {
                // If value is an array, check if all items are strings, are URLs and that
                // the first entry is a verifiable credential context
                if (Array.isArray(value)) {
                    return value.every((v) => (0, class_validator_1.isString)(v) && (0, class_validator_1.isURL)(v)) && value[0] === constants_1.CREDENTIALS_CONTEXT_V1_URL;
                }
                // If value is not an array, check if it is an object (assuming it's a JSON-LD context definition)
                if (typeof value === 'object') {
                    return true;
                }
                return false;
            },
            defaultMessage: (0, class_validator_1.buildMessage)((eachPrefix) => eachPrefix + '$property must be an array of strings or a JSON-LD context definition', validationOptions),
        },
    }, validationOptions);
}
exports.IsJsonLdContext = IsJsonLdContext;
//# sourceMappingURL=validators.js.map