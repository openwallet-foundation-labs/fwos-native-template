import type { CredentialSubjectOptions } from './CredentialSubject';
import type { IssuerOptions } from './Issuer';
import type { JsonObject } from '../../../../types';
import type { ValidationOptions } from 'class-validator';
import { SingleOrArray } from '../../../../utils/type';
import { CredentialSchema } from './CredentialSchema';
import { CredentialSubject } from './CredentialSubject';
import { Issuer } from './Issuer';
export interface W3cCredentialOptions {
    context: Array<string> | JsonObject;
    id?: string;
    type: Array<string>;
    issuer: string | IssuerOptions;
    issuanceDate: string;
    expirationDate?: string;
    credentialSubject: SingleOrArray<CredentialSubjectOptions>;
}
export declare class W3cCredential {
    constructor(options: W3cCredentialOptions);
    context: Array<string> | JsonObject;
    id?: string;
    type: Array<string>;
    issuer: string | Issuer;
    issuanceDate: string;
    expirationDate?: string;
    credentialSubject: SingleOrArray<CredentialSubject>;
    credentialSchema?: SingleOrArray<CredentialSchema>;
    get issuerId(): string;
    get credentialSchemaIds(): string[];
    get credentialSubjectIds(): string[];
    get contexts(): Array<string>;
}
export declare function IsCredentialType(validationOptions?: ValidationOptions): PropertyDecorator;
