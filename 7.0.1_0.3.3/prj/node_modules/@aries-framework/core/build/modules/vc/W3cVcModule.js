"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.W3cVcModule = void 0;
const crypto_1 = require("../../crypto");
const ed25519_1 = require("../dids/domain/key-type/ed25519");
const SignatureSuiteRegistry_1 = require("./SignatureSuiteRegistry");
const W3cCredentialService_1 = require("./W3cCredentialService");
const W3cVcModuleConfig_1 = require("./W3cVcModuleConfig");
const W3cCredentialRepository_1 = require("./repository/W3cCredentialRepository");
const signature_suites_1 = require("./signature-suites");
class W3cVcModule {
    constructor(config) {
        this.config = new W3cVcModuleConfig_1.W3cVcModuleConfig(config);
    }
    register(dependencyManager) {
        dependencyManager.registerSingleton(W3cCredentialService_1.W3cCredentialService);
        dependencyManager.registerSingleton(W3cCredentialRepository_1.W3cCredentialRepository);
        dependencyManager.registerSingleton(SignatureSuiteRegistry_1.SignatureSuiteRegistry);
        // Register the config
        dependencyManager.registerInstance(W3cVcModuleConfig_1.W3cVcModuleConfig, this.config);
        // Always register ed25519 signature suite
        dependencyManager.registerInstance(SignatureSuiteRegistry_1.SignatureSuiteToken, {
            suiteClass: signature_suites_1.Ed25519Signature2018,
            proofType: 'Ed25519Signature2018',
            verificationMethodTypes: [
                ed25519_1.VERIFICATION_METHOD_TYPE_ED25519_VERIFICATION_KEY_2018,
                ed25519_1.VERIFICATION_METHOD_TYPE_ED25519_VERIFICATION_KEY_2020,
            ],
            keyTypes: [crypto_1.KeyType.Ed25519],
        });
    }
}
exports.W3cVcModule = W3cVcModule;
//# sourceMappingURL=W3cVcModule.js.map