import type { ProofAttachmentFormat } from '../../../formats/models/ProofAttachmentFormat';
import { AgentMessage } from '../../../../../agent/AgentMessage';
import { Attachment } from '../../../../../decorators/attachment/Attachment';
import { ProofFormatSpec } from '../../../models/ProofFormatSpec';
export interface V2PresentationMessageOptions {
    id?: string;
    goalCode?: string;
    comment?: string;
    lastPresentation?: boolean;
    attachmentInfo: ProofAttachmentFormat[];
}
export declare class V2PresentationMessage extends AgentMessage {
    constructor(options: V2PresentationMessageOptions);
    addPresentationsAttachment(attachment: ProofAttachmentFormat): void;
    /**
     * Every attachment has a corresponding entry in the formats array.
     * This method pairs those together in a {@link ProofAttachmentFormat} object.
     */
    getAttachmentFormats(): ProofAttachmentFormat[];
    readonly type: string;
    static readonly type: import("../../../../../utils/messageType").ParsedMessageType;
    comment?: string;
    goalCode?: string;
    lastPresentation: boolean;
    formats: ProofFormatSpec[];
    presentationsAttach: Attachment[];
}
