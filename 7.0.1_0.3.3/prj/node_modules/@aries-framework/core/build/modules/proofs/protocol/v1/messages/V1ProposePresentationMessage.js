"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1ProposePresentationMessage = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const AgentMessage_1 = require("../../../../../agent/AgentMessage");
const messageType_1 = require("../../../../../utils/messageType");
const V1PresentationPreview_1 = require("../models/V1PresentationPreview");
/**
 * Propose Presentation Message part of Present Proof Protocol used to initiate presentation exchange by holder.
 *
 * @see https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#propose-presentation
 */
class V1ProposePresentationMessage extends AgentMessage_1.AgentMessage {
    constructor(options) {
        var _a;
        super();
        this.type = V1ProposePresentationMessage.type.messageTypeUri;
        if (options) {
            this.id = (_a = options.id) !== null && _a !== void 0 ? _a : this.generateId();
            this.comment = options.comment;
            if (options.parentThreadId) {
                this.setThread({
                    parentThreadId: options.parentThreadId,
                });
            }
            this.presentationProposal = options.presentationProposal;
        }
    }
}
V1ProposePresentationMessage.type = (0, messageType_1.parseMessageType)('https://didcomm.org/present-proof/1.0/propose-presentation');
__decorate([
    (0, messageType_1.IsValidMessageType)(V1ProposePresentationMessage.type),
    __metadata("design:type", Object)
], V1ProposePresentationMessage.prototype, "type", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], V1ProposePresentationMessage.prototype, "comment", void 0);
__decorate([
    (0, class_transformer_1.Expose)({ name: 'presentation_proposal' }),
    (0, class_transformer_1.Type)(() => V1PresentationPreview_1.PresentationPreview),
    (0, class_validator_1.ValidateNested)(),
    (0, class_validator_1.IsInstance)(V1PresentationPreview_1.PresentationPreview),
    __metadata("design:type", V1PresentationPreview_1.PresentationPreview)
], V1ProposePresentationMessage.prototype, "presentationProposal", void 0);
exports.V1ProposePresentationMessage = V1ProposePresentationMessage;
//# sourceMappingURL=V1ProposePresentationMessage.js.map