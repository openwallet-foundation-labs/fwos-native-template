import { PredicateType } from '../../../formats/indy/models/PredicateType';
export interface PresentationPreviewAttributeOptions {
    name: string;
    credentialDefinitionId?: string;
    mimeType?: string;
    value?: string;
    referent?: string;
}
export declare class PresentationPreviewAttribute {
    constructor(options: PresentationPreviewAttributeOptions);
    name: string;
    credentialDefinitionId?: string;
    mimeType?: string;
    value?: string;
    referent?: string;
    toJSON(): Record<string, unknown>;
}
export interface PresentationPreviewPredicateOptions {
    name: string;
    credentialDefinitionId: string;
    predicate: PredicateType;
    threshold: number;
}
export declare class PresentationPreviewPredicate {
    constructor(options: PresentationPreviewPredicateOptions);
    name: string;
    credentialDefinitionId: string;
    predicate: PredicateType;
    threshold: number;
    toJSON(): Record<string, unknown>;
}
export interface PresentationPreviewOptions {
    attributes?: PresentationPreviewAttribute[];
    predicates?: PresentationPreviewPredicate[];
}
/**
 * Presentation preview inner message class.
 *
 * This is not a message but an inner object for other messages in this protocol. It is used to construct a preview of the data for the presentation.
 *
 * @see https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#presentation-preview
 */
export declare class PresentationPreview {
    constructor(options: PresentationPreviewOptions);
    readonly type: string;
    static readonly type: import("../../../../../utils/messageType").ParsedMessageType;
    attributes: PresentationPreviewAttribute[];
    predicates: PresentationPreviewPredicate[];
    toJSON(): Record<string, unknown>;
}
