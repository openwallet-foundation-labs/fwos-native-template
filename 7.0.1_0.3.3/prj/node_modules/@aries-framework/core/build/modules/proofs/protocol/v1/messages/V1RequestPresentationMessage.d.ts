import type { ProofAttachmentFormat } from '../../../formats/models/ProofAttachmentFormat';
import type { IndyProofRequest } from 'indy-sdk';
import { AgentMessage } from '../../../../../agent/AgentMessage';
import { Attachment } from '../../../../../decorators/attachment/Attachment';
import { ProofRequest } from '../../../formats/indy/models/ProofRequest';
export interface RequestPresentationOptions {
    id?: string;
    comment?: string;
    parentThreadId?: string;
    requestPresentationAttachments: Attachment[];
}
export declare const INDY_PROOF_REQUEST_ATTACHMENT_ID = "libindy-request-presentation-0";
/**
 * Request Presentation Message part of Present Proof Protocol used to initiate request from verifier to prover.
 *
 * @see https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
 */
export declare class V1RequestPresentationMessage extends AgentMessage {
    constructor(options: RequestPresentationOptions);
    readonly type: string;
    static readonly type: import("../../../../../utils/messageType").ParsedMessageType;
    /**
     *  Provides some human readable information about this request for a presentation.
     */
    comment?: string;
    /**
     * An array of attachments defining the acceptable formats for the presentation.
     */
    requestPresentationAttachments: Attachment[];
    get indyProofRequest(): ProofRequest | null;
    get indyProofRequestJson(): IndyProofRequest | null;
    getAttachmentFormats(): ProofAttachmentFormat[];
    get indyAttachment(): Attachment | null;
}
