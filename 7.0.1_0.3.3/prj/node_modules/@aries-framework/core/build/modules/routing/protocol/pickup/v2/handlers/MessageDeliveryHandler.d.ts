import type { MessageHandler } from '../../../../../../agent/MessageHandler';
import type { InboundMessageContext } from '../../../../../../agent/models/InboundMessageContext';
import type { MediationRecipientService } from '../../../../services';
import { OutboundMessageContext } from '../../../../../../agent/models';
import { MessageDeliveryMessage } from '../messages/MessageDeliveryMessage';
export declare class MessageDeliveryHandler implements MessageHandler {
    supportedMessages: (typeof MessageDeliveryMessage)[];
    private mediationRecipientService;
    constructor(mediationRecipientService: MediationRecipientService);
    handle(messageContext: InboundMessageContext<MessageDeliveryMessage>): Promise<OutboundMessageContext<import("..").MessagesReceivedMessage> | undefined>;
}
