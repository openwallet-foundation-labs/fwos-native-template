import type { RecipientModuleConfigOptions } from './RecipientModuleConfig';
import type { FeatureRegistry } from '../../agent/FeatureRegistry';
import type { DependencyManager, Module } from '../../plugins';
import { RecipientApi } from './RecipientApi';
import { RecipientModuleConfig } from './RecipientModuleConfig';
export declare class RecipientModule implements Module {
    readonly config: RecipientModuleConfig;
    readonly api: typeof RecipientApi;
    constructor(config?: RecipientModuleConfigOptions);
    /**
     * Registers the dependencies of the mediator recipient module on the dependency manager.
     */
    register(dependencyManager: DependencyManager, featureRegistry: FeatureRegistry): void;
}
