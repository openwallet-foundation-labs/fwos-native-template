import type { MessageHandler, MessageHandlerInboundMessage } from '../../../../../agent/MessageHandler';
import type { V1CredentialProtocol } from '../V1CredentialProtocol';
import { OutboundMessageContext } from '../../../../../agent/models';
import { V1IssueCredentialMessage } from '../messages';
export declare class V1IssueCredentialHandler implements MessageHandler {
    private credentialProtocol;
    supportedMessages: (typeof V1IssueCredentialMessage)[];
    constructor(credentialProtocol: V1CredentialProtocol);
    handle(messageContext: MessageHandlerInboundMessage<V1IssueCredentialHandler>): Promise<OutboundMessageContext<import("../messages").V1CredentialAckMessage> | undefined>;
    private acceptCredential;
}
